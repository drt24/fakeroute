#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# fakeroute-plot
#
# fakeroute-plot plots the topologies simulated by fakeroute using 'dot'.
#
# Author: Jordan Augé       <jordan.auge@lip6.fr>
#         Marc-Olivier Buob <marc-olivier.buob@lip6.fr>
# Copyright (C)2011, UPMC Sorbonnes Universités / LIP6
#
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 3, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
# 
# You should have received a copy of the GNU General Public License along with
# this program; see the file COPYING.  If not, write to the Free Software
# Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#

from common import get_cfg_path, get_handled_files, str_ip_get_version
import os, sys, pydot, socket

ERR_INVALID_IP      = "Invalid IP address %r, it should be an IPv4 or an IPv6 address"
ERR_INVALID_TARGET  = "Invalid fakeroute IP address %r (see %r). Valid IPs are:\n  IPv4: %s\n  IPv6: %s\n"
ERR_INVALID_FILE    = "Invalid file (%r)"
INF_CONVERTING      = "I: Converting %r into %r"

def find_fakeroute_file(ip):
    # Guess IP version
    try:
        ip_version = str_ip_get_version(ip)
    except socket.error:
        sys.stderr(ERR_INVALID_IP % ip)
        return None

    # Explore fakeroute directories 
    cfg_path = get_cfg_path()
    handled4, handled6 = get_handled_files(cfg_path)
    filename_fkr = None
    try:
        if ip_version == socket.AF_INET:
            filename_fkr = handled4[ip]
        elif ip_version == socket.AF_INET6:
            filename_fkr = handled6[ip]
    except Exception:
        sys.stderr.write(ERR_INVALID_TARGET % (
            ip,
            cfg_path,
            " ".join(handled4.values()), 
            " ".join(handled6.values())
        ))
    assert filename_fkr, ERR_INVALID_FILE % filename_fkr
    return filename_fkr

def main(ip):
    filename_fkr = find_fakeroute_file(ip)
    if not filename_fkr: sys.exit(-1)
    filename_png = "%s.png" % os.path.basename(filename_fkr)
    graph = pydot.Dot(graph_type = "digraph")

    print INF_CONVERTING % (filename_fkr, filename_png)
    lines = [line.strip() for line in open(filename_fkr, "r").readlines()]

    for line in lines:
        if not line or line[0] == "#": continue
        line = line.split()
        edge = pydot.Edge(line[0], line[1])
        graph.add_edge(edge)

    graph.write_png(filename_png)

if __name__ == "__main__":
    if len(sys.argv) != 2:
        sys.stderr.write("usage: %s ip-address" % sys.argv[0])
        sys.exit(-1)
    ip = sys.argv[1]
    main(ip)
